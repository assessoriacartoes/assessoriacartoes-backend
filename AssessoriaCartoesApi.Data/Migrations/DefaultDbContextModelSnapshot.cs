// <auto-generated />
using AssessoriaCartoesApi.Data.DbContextAssessoria;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace AssessoriaCartoesApi.Data.Migrations
{
    [DbContext(typeof(DefaultDbContext))]
    partial class DefaultDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("AssessoriaCartoesApi.Data.Entities.AjusteEASSESSORIA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AgenciaDeDepositoDoCredito")
                        .HasColumnType("text");

                    b.Property<string>("CNPJDoEstabelecimento")
                        .HasColumnType("text");

                    b.Property<string>("CodigoAgrupadorBancarioDoComprovante")
                        .HasColumnType("text");

                    b.Property<string>("CodigoDeAjuste")
                        .HasColumnType("text");

                    b.Property<string>("CodigoDeAutorizacao")
                        .HasColumnType("text");

                    b.Property<string>("CodigoDeCompensacaoDoBanco")
                        .HasColumnType("text");

                    b.Property<string>("CodigoOriginalDeAjuste")
                        .HasColumnType("text");

                    b.Property<string>("ContaDeDepositoDoCredito")
                        .HasColumnType("text");

                    b.Property<string>("DataDaVenda")
                        .HasColumnType("text");

                    b.Property<string>("DataDeEnvioAoBanco")
                        .HasColumnType("text");

                    b.Property<string>("DataDeReferencia")
                        .HasColumnType("text");

                    b.Property<string>("DataDoCreditoDaParcela")
                        .HasColumnType("text");

                    b.Property<string>("DataDoResumoDeAjuste")
                        .HasColumnType("text");

                    b.Property<string>("DescricaoDoMotivoDoAjuste")
                        .HasColumnType("text");

                    b.Property<string>("IdDaOcorrencia")
                        .HasColumnType("text");

                    b.Property<string>("IdentificacaoDoValor")
                        .HasColumnType("text");

                    b.Property<string>("NSUCV")
                        .HasColumnType("text");

                    b.Property<string>("NomeDaAdministradora")
                        .HasColumnType("text");

                    b.Property<string>("NumeroDaNotaFiscal")
                        .HasColumnType("text");

                    b.Property<string>("NumeroDaParcela")
                        .HasColumnType("text");

                    b.Property<string>("NumeroDeReferencia")
                        .HasColumnType("text");

                    b.Property<string>("NumeroDoCartao")
                        .HasColumnType("text");

                    b.Property<string>("NumeroDoProcesso")
                        .HasColumnType("text");

                    b.Property<string>("NumeroDoResumoAtual")
                        .HasColumnType("text");

                    b.Property<string>("NumeroDoResumoOriginal")
                        .HasColumnType("text");

                    b.Property<string>("PDVAjustado")
                        .HasColumnType("text");

                    b.Property<string>("PDVOriginal")
                        .HasColumnType("text");

                    b.Property<string>("StatusDePagamentos")
                        .HasColumnType("text");

                    b.Property<string>("TID")
                        .HasColumnType("text");

                    b.Property<string>("TipoDeCaptura")
                        .HasColumnType("text");

                    b.Property<string>("TipoDeRegistro")
                        .HasColumnType("text");

                    b.Property<string>("ValorBrutoDaParcelaAjuste")
                        .HasColumnType("text");

                    b.Property<string>("ValorDescontoDoResumo")
                        .HasColumnType("text");

                    b.Property<string>("ValorDoAjuste")
                        .HasColumnType("text");

                    b.Property<string>("ValorLiquidoDoResumo")
                        .HasColumnType("text");

                    b.Property<string>("ValorTaxaDeServico")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AjusteEASSESSORIA");
                });

            modelBuilder.Entity("AssessoriaCartoesApi.Data.Entities.AjusteG5SMART", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AgenciaDeDepositoDoCredito")
                        .HasColumnType("text");

                    b.Property<string>("CNPJDoEstabelecimento")
                        .HasColumnType("text");

                    b.Property<string>("CodigoAgrupadorBancarioDoComprovante")
                        .HasColumnType("text");

                    b.Property<string>("CodigoDeAjuste")
                        .HasColumnType("text");

                    b.Property<string>("CodigoDeAutorizacao")
                        .HasColumnType("text");

                    b.Property<string>("CodigoDeCompensacaoDoBanco")
                        .HasColumnType("text");

                    b.Property<string>("CodigoOriginalDeAjuste")
                        .HasColumnType("text");

                    b.Property<string>("ContaDeDepositoDoCredito")
                        .HasColumnType("text");

                    b.Property<string>("DataDaVenda")
                        .HasColumnType("text");

                    b.Property<string>("DataDeEnvioAoBanco")
                        .HasColumnType("text");

                    b.Property<string>("DataDeReferencia")
                        .HasColumnType("text");

                    b.Property<string>("DataDoCreditoDaParcela")
                        .HasColumnType("text");

                    b.Property<string>("DataDoResumoDeAjuste")
                        .HasColumnType("text");

                    b.Property<string>("DescricaoDoMotivoDoAjuste")
                        .HasColumnType("text");

                    b.Property<string>("IdDaOcorrencia")
                        .HasColumnType("text");

                    b.Property<string>("IdentificacaoDoValor")
                        .HasColumnType("text");

                    b.Property<string>("NSUCV")
                        .HasColumnType("text");

                    b.Property<string>("NomeDaAdministradora")
                        .HasColumnType("text");

                    b.Property<string>("NumeroDaNotaFiscal")
                        .HasColumnType("text");

                    b.Property<string>("NumeroDaParcela")
                        .HasColumnType("text");

                    b.Property<string>("NumeroDeReferencia")
                        .HasColumnType("text");

                    b.Property<string>("NumeroDoCartao")
                        .HasColumnType("text");

                    b.Property<string>("NumeroDoProcesso")
                        .HasColumnType("text");

                    b.Property<string>("NumeroDoResumoAtual")
                        .HasColumnType("text");

                    b.Property<string>("NumeroDoResumoOriginal")
                        .HasColumnType("text");

                    b.Property<string>("PDVAjustado")
                        .HasColumnType("text");

                    b.Property<string>("PDVOriginal")
                        .HasColumnType("text");

                    b.Property<string>("StatusDePagamentos")
                        .HasColumnType("text");

                    b.Property<string>("TID")
                        .HasColumnType("text");

                    b.Property<string>("TipoDeCaptura")
                        .HasColumnType("text");

                    b.Property<string>("TipoDeRegistro")
                        .HasColumnType("text");

                    b.Property<string>("ValorBrutoDaParcelaAjuste")
                        .HasColumnType("text");

                    b.Property<string>("ValorDescontoDoResumo")
                        .HasColumnType("text");

                    b.Property<string>("ValorDoAjuste")
                        .HasColumnType("text");

                    b.Property<string>("ValorLiquidoDoResumo")
                        .HasColumnType("text");

                    b.Property<string>("ValorTaxaDeServico")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AjusteG5SMART");
                });

            modelBuilder.Entity("AssessoriaCartoesApi.Data.Entities.AntecipacaoEASSESSORIA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AgenciaDeDepositoDoCredito")
                        .HasColumnType("text");

                    b.Property<string>("CNPJDoEstabelecimento")
                        .HasColumnType("text");

                    b.Property<string>("CodigoDeAjuste")
                        .HasColumnType("text");

                    b.Property<string>("CodigoDeCompensacaoDoBanco")
                        .HasColumnType("text");

                    b.Property<string>("ContaDeDepositoDoCredito")
                        .HasColumnType("text");

                    b.Property<string>("DataDoCreditoDaParcela")
                        .HasColumnType("text");

                    b.Property<string>("DataDoResumoDeVenda")
                        .HasColumnType("text");

                    b.Property<string>("DataDoVencimento")
                        .HasColumnType("text");

                    b.Property<string>("NomeDaAdministradora")
                        .HasColumnType("text");

                    b.Property<string>("NumeroDaParcela")
                        .HasColumnType("text");

                    b.Property<string>("NumeroDoResumo")
                        .HasColumnType("text");

                    b.Property<string>("PDVOperadora")
                        .HasColumnType("text");

                    b.Property<string>("TipoDeRegistro")
                        .HasColumnType("text");

                    b.Property<string>("ValorBrutoDaParcelaDeResumo")
                        .HasColumnType("text");

                    b.Property<string>("ValorCreditoLiquidoOriginal")
                        .HasColumnType("text");

                    b.Property<string>("ValorDescontoAntecipacaoDeRecebiveis")
                        .HasColumnType("text");

                    b.Property<string>("ValorDescontoDaParcelaDeResumo")
                        .HasColumnType("text");

                    b.Property<string>("ValorInicialNegociadoParaAAntecipacao")
                        .HasColumnType("text");

                    b.Property<string>("ValorLiquidoCreditado")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AntecipacaoEASSESSORIA");
                });

            modelBuilder.Entity("AssessoriaCartoesApi.Data.Entities.AntecipacaoG5SMART", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AgenciaDeDepositoDoCredito")
                        .HasColumnType("text");

                    b.Property<string>("CNPJDoEstabelecimento")
                        .HasColumnType("text");

                    b.Property<string>("CodigoDeAjuste")
                        .HasColumnType("text");

                    b.Property<string>("CodigoDeCompensacaoDoBanco")
                        .HasColumnType("text");

                    b.Property<string>("ContaDeDepositoDoCredito")
                        .HasColumnType("text");

                    b.Property<string>("DataDoCreditoDaParcela")
                        .HasColumnType("text");

                    b.Property<string>("DataDoResumoDeVenda")
                        .HasColumnType("text");

                    b.Property<string>("DataDoVencimento")
                        .HasColumnType("text");

                    b.Property<string>("NomeDaAdministradora")
                        .HasColumnType("text");

                    b.Property<string>("NumeroDaParcela")
                        .HasColumnType("text");

                    b.Property<string>("NumeroDoResumo")
                        .HasColumnType("text");

                    b.Property<string>("PDVOperadora")
                        .HasColumnType("text");

                    b.Property<string>("TipoDeRegistro")
                        .HasColumnType("text");

                    b.Property<string>("ValorBrutoDaParcelaDeResumo")
                        .HasColumnType("text");

                    b.Property<string>("ValorCreditoLiquidoOriginal")
                        .HasColumnType("text");

                    b.Property<string>("ValorDescontoAntecipacaoDeRecebiveis")
                        .HasColumnType("text");

                    b.Property<string>("ValorDescontoDaParcelaDeResumo")
                        .HasColumnType("text");

                    b.Property<string>("ValorInicialNegociadoParaAAntecipacao")
                        .HasColumnType("text");

                    b.Property<string>("ValorLiquidoCreditado")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AntecipacaoG5SMART");
                });

            modelBuilder.Entity("AssessoriaCartoesApi.Data.Entities.FinanceiraSemVendaEASSESSORIA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Coluna1")
                        .HasColumnType("text");

                    b.Property<string>("Coluna10")
                        .HasColumnType("text");

                    b.Property<string>("Coluna11")
                        .HasColumnType("text");

                    b.Property<string>("Coluna12")
                        .HasColumnType("text");

                    b.Property<string>("Coluna13")
                        .HasColumnType("text");

                    b.Property<string>("Coluna14")
                        .HasColumnType("text");

                    b.Property<string>("Coluna15")
                        .HasColumnType("text");

                    b.Property<string>("Coluna16")
                        .HasColumnType("text");

                    b.Property<string>("Coluna17")
                        .HasColumnType("text");

                    b.Property<string>("Coluna18")
                        .HasColumnType("text");

                    b.Property<string>("Coluna19")
                        .HasColumnType("text");

                    b.Property<string>("Coluna2")
                        .HasColumnType("text");

                    b.Property<string>("Coluna20")
                        .HasColumnType("text");

                    b.Property<string>("Coluna21")
                        .HasColumnType("text");

                    b.Property<string>("Coluna3")
                        .HasColumnType("text");

                    b.Property<string>("Coluna4")
                        .HasColumnType("text");

                    b.Property<string>("Coluna5")
                        .HasColumnType("text");

                    b.Property<string>("Coluna6")
                        .HasColumnType("text");

                    b.Property<string>("Coluna7")
                        .HasColumnType("text");

                    b.Property<string>("Coluna8")
                        .HasColumnType("text");

                    b.Property<string>("Coluna9")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("FinanceiraSemVendaEASSESSORIA");
                });

            modelBuilder.Entity("AssessoriaCartoesApi.Data.Entities.FinanceiraSemVendaG5SMART", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Coluna1")
                        .HasColumnType("text");

                    b.Property<string>("Coluna10")
                        .HasColumnType("text");

                    b.Property<string>("Coluna11")
                        .HasColumnType("text");

                    b.Property<string>("Coluna12")
                        .HasColumnType("text");

                    b.Property<string>("Coluna13")
                        .HasColumnType("text");

                    b.Property<string>("Coluna14")
                        .HasColumnType("text");

                    b.Property<string>("Coluna15")
                        .HasColumnType("text");

                    b.Property<string>("Coluna16")
                        .HasColumnType("text");

                    b.Property<string>("Coluna17")
                        .HasColumnType("text");

                    b.Property<string>("Coluna18")
                        .HasColumnType("text");

                    b.Property<string>("Coluna19")
                        .HasColumnType("text");

                    b.Property<string>("Coluna2")
                        .HasColumnType("text");

                    b.Property<string>("Coluna20")
                        .HasColumnType("text");

                    b.Property<string>("Coluna21")
                        .HasColumnType("text");

                    b.Property<string>("Coluna3")
                        .HasColumnType("text");

                    b.Property<string>("Coluna4")
                        .HasColumnType("text");

                    b.Property<string>("Coluna5")
                        .HasColumnType("text");

                    b.Property<string>("Coluna6")
                        .HasColumnType("text");

                    b.Property<string>("Coluna7")
                        .HasColumnType("text");

                    b.Property<string>("Coluna8")
                        .HasColumnType("text");

                    b.Property<string>("Coluna9")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("FinanceiraSemVendaG5SMART");
                });

            modelBuilder.Entity("AssessoriaCartoesApi.Data.Entities.FinanceiroEASSESSORIA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AgenciaDeDepositoDoCredito")
                        .HasColumnType("text");

                    b.Property<string>("BPAGID")
                        .HasColumnType("text");

                    b.Property<string>("CNPJDoEstabelecimento")
                        .HasColumnType("text");

                    b.Property<string>("CodigoAgrupadorBancarioDoComprovante")
                        .HasColumnType("text");

                    b.Property<string>("CodigoDeAutorizacao")
                        .HasColumnType("text");

                    b.Property<string>("CodigoDeCompensacaoDoBanco")
                        .HasColumnType("text");

                    b.Property<string>("CodigoDeControleInterno")
                        .HasColumnType("text");

                    b.Property<string>("ContaDeDepositoDoCredito")
                        .HasColumnType("text");

                    b.Property<string>("DataDaVenda")
                        .HasColumnType("text");

                    b.Property<string>("DataDoCreditoDaParcela")
                        .HasColumnType("text");

                    b.Property<string>("IndicacaoDeFinanceiroConciliacaoBancariaVenda")
                        .HasColumnType("text");

                    b.Property<string>("NSUCV")
                        .HasColumnType("text");

                    b.Property<string>("NSUTEF")
                        .HasColumnType("text");

                    b.Property<string>("NomeDaAdministradora")
                        .HasColumnType("text");

                    b.Property<string>("NomeDaBandeira")
                        .HasColumnType("text");

                    b.Property<string>("NumeroDaNotaFiscal")
                        .HasColumnType("text");

                    b.Property<string>("NumeroDaParcela")
                        .HasColumnType("text");

                    b.Property<string>("NumeroDoResumo")
                        .HasColumnType("text");

                    b.Property<string>("NumeroTotalDeParcelas")
                        .HasColumnType("text");

                    b.Property<string>("PDV")
                        .HasColumnType("text");

                    b.Property<string>("TID")
                        .HasColumnType("text");

                    b.Property<string>("TipoDeRegistro")
                        .HasColumnType("text");

                    b.Property<string>("TipoDeRegistroTabelaII")
                        .HasColumnType("text");

                    b.Property<string>("ValorBrutoDaParcela")
                        .HasColumnType("text");

                    b.Property<string>("ValorLiquidoDaParcela")
                        .HasColumnType("text");

                    b.Property<string>("Vazio")
                        .HasColumnType("text");

                    b.Property<string>("Vazio1")
                        .HasColumnType("text");

                    b.Property<string>("Vazio2")
                        .HasColumnType("text");

                    b.Property<string>("Vazio3")
                        .HasColumnType("text");

                    b.Property<string>("Vazio4")
                        .HasColumnType("text");

                    b.Property<string>("Vazio5")
                        .HasColumnType("text");

                    b.Property<string>("Vazio6")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("FinanceiroEASSESSORIA");
                });

            modelBuilder.Entity("AssessoriaCartoesApi.Data.Entities.FinanceiroG5SMART", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AgenciaDeDepositoDoCredito")
                        .HasColumnType("text");

                    b.Property<string>("BPAGID")
                        .HasColumnType("text");

                    b.Property<string>("CNPJDoEstabelecimento")
                        .HasColumnType("text");

                    b.Property<string>("CodigoAgrupadorBancarioDoComprovante")
                        .HasColumnType("text");

                    b.Property<string>("CodigoDeAutorizacao")
                        .HasColumnType("text");

                    b.Property<string>("CodigoDeCompensacaoDoBanco")
                        .HasColumnType("text");

                    b.Property<string>("CodigoDeControleInterno")
                        .HasColumnType("text");

                    b.Property<string>("ContaDeDepositoDoCredito")
                        .HasColumnType("text");

                    b.Property<string>("DataDaVenda")
                        .HasColumnType("text");

                    b.Property<string>("DataDoCreditoDaParcela")
                        .HasColumnType("text");

                    b.Property<string>("IndicacaoDeFinanceiroConciliacaoBancariaVenda")
                        .HasColumnType("text");

                    b.Property<string>("NSUCV")
                        .HasColumnType("text");

                    b.Property<string>("NSUTEF")
                        .HasColumnType("text");

                    b.Property<string>("NomeDaAdministradora")
                        .HasColumnType("text");

                    b.Property<string>("NomeDaBandeira")
                        .HasColumnType("text");

                    b.Property<string>("NumeroDaNotaFiscal")
                        .HasColumnType("text");

                    b.Property<string>("NumeroDaParcela")
                        .HasColumnType("text");

                    b.Property<string>("NumeroDoResumo")
                        .HasColumnType("text");

                    b.Property<string>("NumeroTotalDeParcelas")
                        .HasColumnType("text");

                    b.Property<string>("PDV")
                        .HasColumnType("text");

                    b.Property<string>("TID")
                        .HasColumnType("text");

                    b.Property<string>("TipoDeRegistro")
                        .HasColumnType("text");

                    b.Property<string>("TipoDeRegistroTabelaII")
                        .HasColumnType("text");

                    b.Property<string>("ValorBrutoDaParcela")
                        .HasColumnType("text");

                    b.Property<string>("ValorLiquidoDaParcela")
                        .HasColumnType("text");

                    b.Property<string>("Vazio")
                        .HasColumnType("text");

                    b.Property<string>("Vazio1")
                        .HasColumnType("text");

                    b.Property<string>("Vazio2")
                        .HasColumnType("text");

                    b.Property<string>("Vazio3")
                        .HasColumnType("text");

                    b.Property<string>("Vazio4")
                        .HasColumnType("text");

                    b.Property<string>("Vazio5")
                        .HasColumnType("text");

                    b.Property<string>("Vazio6")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("FinanceiroG5SMART");
                });

            modelBuilder.Entity("AssessoriaCartoesApi.Data.Entities.TransacaoEASSESSORIA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.HasKey("Id");

                    b.ToTable("TransacaoEASSESSORIA");
                });

            modelBuilder.Entity("AssessoriaCartoesApi.Data.Entities.TransacaoG5SMART", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.HasKey("Id");

                    b.ToTable("TransacaoG5SMART");
                });

            modelBuilder.Entity("AssessoriaCartoesApi.Data.Entities.VendaEASSESSORIA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AgenciaDeDepositoDoCredito")
                        .HasColumnType("text");

                    b.Property<string>("BPAGID")
                        .HasColumnType("text");

                    b.Property<string>("CNPJDoEstabelecimento")
                        .HasColumnType("text");

                    b.Property<string>("CodigoAgrupadorBancarioDoComprovante")
                        .HasColumnType("text");

                    b.Property<string>("CodigoDeAutorizacao")
                        .HasColumnType("text");

                    b.Property<string>("CodigoDeCompensacaoDoBanco")
                        .HasColumnType("text");

                    b.Property<string>("CodigoDeControleInterno")
                        .HasColumnType("text");

                    b.Property<string>("ContaDeDepositoDoCredito")
                        .HasColumnType("text");

                    b.Property<string>("DataDaVenda")
                        .HasColumnType("text");

                    b.Property<string>("DataDoCreditoDaParcela")
                        .HasColumnType("text");

                    b.Property<string>("IndicacaoDeFinanceiroConciliacaoBancariaVenda")
                        .HasColumnType("text");

                    b.Property<string>("NSUCV")
                        .HasColumnType("text");

                    b.Property<string>("NSUTEF")
                        .HasColumnType("text");

                    b.Property<string>("NomeDaAdministradora")
                        .HasColumnType("text");

                    b.Property<string>("NomeDaBandeira")
                        .HasColumnType("text");

                    b.Property<string>("NumeroDaNotaFiscal")
                        .HasColumnType("text");

                    b.Property<string>("NumeroDaParcela")
                        .HasColumnType("text");

                    b.Property<string>("NumeroDoResumo")
                        .HasColumnType("text");

                    b.Property<string>("NumeroTotalDeParcelas")
                        .HasColumnType("text");

                    b.Property<string>("PDV")
                        .HasColumnType("text");

                    b.Property<string>("TID")
                        .HasColumnType("text");

                    b.Property<string>("TipoDeRegistro")
                        .HasColumnType("text");

                    b.Property<string>("TipoDeRegistroTabelaII")
                        .HasColumnType("text");

                    b.Property<string>("ValorBrutoDaParcela")
                        .HasColumnType("text");

                    b.Property<string>("ValorLiquidoDaParcela")
                        .HasColumnType("text");

                    b.Property<string>("Vazio")
                        .HasColumnType("text");

                    b.Property<string>("Vazio1")
                        .HasColumnType("text");

                    b.Property<string>("Vazio2")
                        .HasColumnType("text");

                    b.Property<string>("Vazio3")
                        .HasColumnType("text");

                    b.Property<string>("Vazio4")
                        .HasColumnType("text");

                    b.Property<string>("Vazio5")
                        .HasColumnType("text");

                    b.Property<string>("Vazio6")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("VendaEASSESSORIA");
                });

            modelBuilder.Entity("AssessoriaCartoesApi.Data.Entities.VendaG5SMART", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AgenciaDeDepositoDoCredito")
                        .HasColumnType("text");

                    b.Property<string>("BPAGID")
                        .HasColumnType("text");

                    b.Property<string>("CNPJDoEstabelecimento")
                        .HasColumnType("text");

                    b.Property<string>("CodigoAgrupadorBancarioDoComprovante")
                        .HasColumnType("text");

                    b.Property<string>("CodigoDeAutorizacao")
                        .HasColumnType("text");

                    b.Property<string>("CodigoDeCompensacaoDoBanco")
                        .HasColumnType("text");

                    b.Property<string>("CodigoDeControleInterno")
                        .HasColumnType("text");

                    b.Property<string>("ContaDeDepositoDoCredito")
                        .HasColumnType("text");

                    b.Property<string>("DataDaVenda")
                        .HasColumnType("text");

                    b.Property<string>("DataDoCreditoDaParcela")
                        .HasColumnType("text");

                    b.Property<string>("IndicacaoDeFinanceiroConciliacaoBancariaVenda")
                        .HasColumnType("text");

                    b.Property<string>("NSUCV")
                        .HasColumnType("text");

                    b.Property<string>("NSUTEF")
                        .HasColumnType("text");

                    b.Property<string>("NomeDaAdministradora")
                        .HasColumnType("text");

                    b.Property<string>("NomeDaBandeira")
                        .HasColumnType("text");

                    b.Property<string>("NumeroDaNotaFiscal")
                        .HasColumnType("text");

                    b.Property<string>("NumeroDaParcela")
                        .HasColumnType("text");

                    b.Property<string>("NumeroDoResumo")
                        .HasColumnType("text");

                    b.Property<string>("NumeroTotalDeParcelas")
                        .HasColumnType("text");

                    b.Property<string>("PDV")
                        .HasColumnType("text");

                    b.Property<string>("TID")
                        .HasColumnType("text");

                    b.Property<string>("TipoDeRegistro")
                        .HasColumnType("text");

                    b.Property<string>("TipoDeRegistroTabelaII")
                        .HasColumnType("text");

                    b.Property<string>("ValorBrutoDaParcela")
                        .HasColumnType("text");

                    b.Property<string>("ValorLiquidoDaParcela")
                        .HasColumnType("text");

                    b.Property<string>("Vazio")
                        .HasColumnType("text");

                    b.Property<string>("Vazio1")
                        .HasColumnType("text");

                    b.Property<string>("Vazio2")
                        .HasColumnType("text");

                    b.Property<string>("Vazio3")
                        .HasColumnType("text");

                    b.Property<string>("Vazio4")
                        .HasColumnType("text");

                    b.Property<string>("Vazio5")
                        .HasColumnType("text");

                    b.Property<string>("Vazio6")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("VendaG5SMART");
                });
#pragma warning restore 612, 618
        }
    }
}
